services:
  volumes:
    grafana-storage:

  grafana:
    container_name: grafana
    build:
      context: ./grafana
      dockerfile: Dockerfile
    image: ghcr.io/volkovlabs/app:3.3.0
    restart: always
    entrypoint: /run.sh
    ports:
      - ${GRAFANA_PORT}:3000/tcp
    environment:
      - GF_RENDERING_SERVER_URL=http://${RENDER_HOST}:8081/render
      - GF_RENDERING_CALLBACK_URL=http://${GRAFANA_HOST}:${GRAFANA_PORT}/
      - GF_LOG_FILTERS=rendering:debug
      - GF_DEFAULT_APP_MODE=development
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - TEG_DB_URL=${TEG_DB_URL}
      - TEG_DB_USR=${TEG_DB_USR}
      - TEG_DB_PASS=${TEG_DB_PASS}
      - TEG_DB_NAME=${TEG_DB_NAME}
      - TEG_DB_PORT=${TEG_DB_PORT}
      #- GF_INSTALL_PLUGINS=marcusolsson-static-datasource,marcusolsson-json-datasource,marcusolsson-dynamictext-panel,volkovlabs-variable-panel,volkovlabs-echarts-panel,volkovlabs-rss-datasource,volkovlabs-table-panel,volkovlabs-image-panel,volkovlabs-form-panel
    volumes:
      - ./grafana/dist:/var/lib/grafana/plugins/volkovlabs-app
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/demo
      - ./grafana/data-storage:/var/lib/grafana
    networks:
      - mynet

  reporter:
    image: izakmarais/grafana-reporter:2.3.1
    restart: always
    ports:
      - 8686:8686
    depends_on:
      - grafana
    command: "-ip grafana:3000"
    networks:
      - mynet
  
  mysql:
    image: mysql:8.0.39
    restart: always
    container_name: db-teg
    environment:
      # - MYSQL_DATABASE=${TEG_DB_NAME}
      - MYSQL_ROOT_PASSWORD=${TEG_DB_PASS}
    ports:
      - '${TEG_DB_PORT}:3306'
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/data:/var/lib/mysql   # <-- Añade esta línea para persistencia
    networks:
      - mynet
  
  # renderer:
  #   image: grafana/grafana-image-renderer:3.8.4
  #   restart: always
  #   ports:
  #     - 8081
  #   volumes:
  #     - ./renderer/config.json:/usr/src/app/config.json
  #   networks:
  #     - mynet


networks:
  mynet:

  # nginx:
  #   container_name: nginx
  #   build: ./nginx
  #   restart: always
  #   environment:
  #     - GRAFANA_HOST=host.docker.internal
  #   ports:
  #     - 80:80/tcp
  #     - 443:443/tcp
  #   depends_on:
  #     - grafana
